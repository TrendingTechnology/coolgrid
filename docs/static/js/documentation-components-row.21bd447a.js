(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./documentation/components/Row.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return o});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js"),b=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),l={},c="wrapper";function o(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(r.b)(c,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"row"},"Row"),Object(r.b)("h2",{id:"usage-example"},"Usage example"),Object(r.b)("p",null,"Use default grid settings by importing it to styled-components\n",Object(r.b)("inlineCode",{parentName:"p"},"<ThemeProvider>")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { ThemeProvider } from 'styled-components'\nimport { Container, Row, Col, theme } from 'coolstyle\n\n<ThemeProvider theme={{ grid: theme }}>\n  <Container>\n    <Row>...</Row>\n    <Row>...</Row>\n  </Container>\n</ThemeProvider>\n\n// or without using Container\n<ThemeProvider theme={{ grid: theme }}>\n  <Row>...</Row>\n  <Row>...</Row>\n</ThemeProvider>\n")),Object(r.b)("p",null,"or create your own grid configuration. There are several approaches\nhow you can achieve this."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { ThemeProvider } from 'styled-components'\nimport { theme } from 'coolstyle\n\n<ThemeProvider theme={{ grid: theme }}>\n  {/* ...your components */}\n</ThemeProvider>\n")),Object(r.b)("p",null,"you can also directly overrides grid settings in your Row components"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { ThemeProvider } from 'styled-components'\nimport { Row, theme } from 'coolstyle\n\n<ThemeProvider theme={{ grid: theme }}>\n  <Row breakpoints={/* object */} columns={7}>\n    {/* ...your components */}\n  </Row>\n\n</ThemeProvider>\n")),Object(r.b)("h2",{id:"properties"},"Properties"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"property name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"default value"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"theme"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"styled-components")," theme")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"breakpoints"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"breakpoints for responsivity")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"baseSize"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"16"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"base font size used for ",Object(r.b)("inlineCode",{parentName:"td"},"em")," calculation")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"columns"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"12"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"total number of columns in one ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"size"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number / object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"size of ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"gap"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number / object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"gap of all ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"padding"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number / object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"padding of all ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"gutter"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number / object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"gutter of all ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"css"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string / func"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"css extension for ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"colCss"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string / func"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"css extension for all ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"tag"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"HTML valid tag, generates ",Object(r.b)("inlineCode",{parentName:"td"},"div")," by default")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"colTag"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"valid HTML tag for all ",Object(r.b)("inlineCode",{parentName:"td"},"Col"),"s inside ",Object(r.b)("inlineCode",{parentName:"td"},"Row"),", ",Object(r.b)("inlineCode",{parentName:"td"},"div")," by default")))),Object(r.b)("p",null,"You can also use ",Object(r.b)("inlineCode",{parentName:"p"},"breakpoint keys")," as a properties. The example would be following:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"  const xs = {\n    padding: 10,\n    gap: 10,\n    gutter: 0,\n    size: 4\n  }\n\n  const lg = {\n    padding: 10,\n    gap: 10,\n    gutter: 0,\n    size: 4\n  }\n\n  <Row xs={xs} lg={lg} />\n")),Object(r.b)("p",null,"From the example above, data are passed via context to Col components.\nComponent ",Object(r.b)("inlineCode",{parentName:"p"},"Col")," gets values of ",Object(r.b)("inlineCode",{parentName:"p"},"size"),", ",Object(r.b)("inlineCode",{parentName:"p"},"gap")," and ",Object(r.b)("inlineCode",{parentName:"p"},"padding"),"."))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"documentation/components/Row.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=documentation-components-row.c7b8f333b489d8d41bf0.js.map